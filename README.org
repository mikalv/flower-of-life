* edn-play
  A exploration of how to read and write edn and json. This project
  uses clojure to build geometric data structures and then
  converts them to edn and json. This step is done through the repl. 

  Then the json data is rendered to svg using d3.js and underscore.js.

  The first step is to work with javascript and json on the client side
  later, we can try using clojurscript.

  For demo, see http://wbabic.github.io/flower-of-life/flower.html
** Usage
   From Emacs,
   M-x nrepl-jack-in

   #+BEGIN_SRC clojure
    user> (use 'clojure.repl)
    user> (use 'clojure.edn)

    user> (doc read)
    user> (doc read-string)

    user> (class (read-string ":a"))
    ;;=> clojure.lang.Keyword

    user> (class {:a 1 :b 2})
    ;;=> clojure.lang.PersistentArrayMap

    user> (class (pr-str {:a 1 :b 2}))
    ;;=> java.lang.String

    user> (class (read-string (pr-str {:a 1 :b 2})))
    ;;=> clojure.lang.PersistentArrayMap

    user> (spit "test.edn" (pr-str {:a 1 :b 2}))
    user> (class (read-string (slurp "test.edn")))
    ;;=> clojure.lang.PersistentArrayMap
   #+END_SRC

   To explre clojure.data.json,
   #+BEGIN_SRC clojure
   user> (require '[clojure.data.json :as json])

   user> (use 'clojure.repl)
   user> (dir clojure.data.json)
   #+END_SRC

** References
   - https://github.com/edn-format/edn/wiki/Implementations
   - https://github.com/edn-format/edn
   - http://clojure.github.io/clojure/clojure.edn-api.html
   - https://github.com/clojure/tools.reader
   - https://github.com/fogus/ring-edn
   - https://github.com/shaunxcode/jsedn
   - https://github.com/clojure/data.json

** License
   Copyright Â© 2013 Walter P Babic

   Distributed under the Eclipse Public License, the same as Clojure.

